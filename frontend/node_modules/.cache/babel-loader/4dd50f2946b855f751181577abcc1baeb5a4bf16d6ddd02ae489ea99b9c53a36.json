{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\pc\\\\desktop\\\\se project\\\\mediafinder\\\\frontend\\\\src\\\\components\\\\MediaGrid.js\",\n  _s = $RefreshSig$();\n// src/components/MediaGrid.js\nimport React from 'react';\nimport { Box, Grid, Card, CardActionArea, CardMedia, CardContent, Typography, Button, Skeleton, useTheme } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_PLACEHOLDERS = Array.from({\n  length: 6\n});\nconst MediaGrid = ({\n  items = [],\n  // array of media objects\n  loading = false,\n  // boolean flag\n  onItemClick = () => {},\n  // called with item when a card is clicked\n  onLoadMore = null // if provided, shows Load More button\n}) => {\n  _s();\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 4,\n      px: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      sx: {\n        mb: 1,\n        fontWeight: 600\n      },\n      children: \"Trending Media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 4\n      },\n      children: \"Explore popular and trending creative assets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: loading ? DEFAULT_PLACEHOLDERS.map((_, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rectangular\",\n          height: 200,\n          animation: \"wave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n            width: \"80%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: \"40%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)) : items.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n            onClick: () => onItemClick(item),\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"200\",\n              image: item.thumbnail || item.imageUrl,\n              alt: item.title || 'Media item',\n              sx: {\n                objectFit: 'cover'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  fontWeight: 500\n                },\n                children: item.title || 'Untitled'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: item.creator_display_name || item.type || ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), onLoadMore && /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        onClick: onLoadMore,\n        disabled: loading,\n        sx: {\n          bgcolor: theme.palette.primary.main,\n          '&:hover': {\n            bgcolor: theme.palette.primary.dark\n          }\n        },\n        children: loading ? 'Loading...' : 'Load More'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MediaGrid, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = MediaGrid;\nexport default MediaGrid;\nvar _c;\n$RefreshReg$(_c, \"MediaGrid\");","map":{"version":3,"names":["React","Box","Grid","Card","CardActionArea","CardMedia","CardContent","Typography","Button","Skeleton","useTheme","jsxDEV","_jsxDEV","DEFAULT_PLACEHOLDERS","Array","from","length","MediaGrid","items","loading","onItemClick","onLoadMore","_s","theme","sx","py","px","children","variant","component","mb","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","container","spacing","map","_","idx","item","xs","sm","md","height","animation","mt","width","onClick","image","thumbnail","imageUrl","alt","title","objectFit","creator_display_name","type","id","textAlign","size","disabled","bgcolor","palette","primary","main","dark","_c","$RefreshReg$"],"sources":["C:/users/pc/desktop/se project/mediafinder/frontend/src/components/MediaGrid.js"],"sourcesContent":["// src/components/MediaGrid.js\r\nimport React from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Skeleton,\r\n  useTheme\r\n} from '@mui/material';\r\n\r\nconst DEFAULT_PLACEHOLDERS = Array.from({ length: 6 });\r\n\r\nconst MediaGrid = ({\r\n  items = [],              // array of media objects\r\n  loading = false,        // boolean flag\r\n  onItemClick = () => {}, // called with item when a card is clicked\r\n  onLoadMore = null       // if provided, shows Load More button\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box sx={{ py: 4, px: 2 }}>\r\n      <Typography\r\n        variant=\"h4\"\r\n        component=\"h2\"\r\n        sx={{ mb: 1, fontWeight: 600 }}\r\n      >\r\n        Trending Media\r\n      </Typography>\r\n      <Typography\r\n        variant=\"body1\"\r\n        color=\"text.secondary\"\r\n        sx={{ mb: 4 }}\r\n      >\r\n        Explore popular and trending creative assets\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        {loading\r\n          ? DEFAULT_PLACEHOLDERS.map((_, idx) => (\r\n              <Grid item xs={12} sm={6} md={4} key={idx}>\r\n                <Skeleton\r\n                  variant=\"rectangular\"\r\n                  height={200}\r\n                  animation=\"wave\"\r\n                />\r\n                <Box sx={{ mt: 1 }}>\r\n                  <Skeleton width=\"80%\" />\r\n                  <Skeleton width=\"40%\" />\r\n                </Box>\r\n              </Grid>\r\n            ))\r\n          : items.map(item => (\r\n              <Grid item xs={12} sm={6} md={4} key={item.id}>\r\n                <Card sx={{ height: '100%' }}>\r\n                  <CardActionArea\r\n                    onClick={() => onItemClick(item)}\r\n                  >\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      height=\"200\"\r\n                      image={item.thumbnail || item.imageUrl}\r\n                      alt={item.title || 'Media item'}\r\n                      sx={{ objectFit: 'cover' }}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        sx={{ fontWeight: 500 }}\r\n                      >\r\n                        {item.title || 'Untitled'}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"text.secondary\"\r\n                      >\r\n                        {item.creator_display_name || item.type || ''}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n      </Grid>\r\n\r\n      {onLoadMore && (\r\n        <Box textAlign=\"center\" mt={4}>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={onLoadMore}\r\n            disabled={loading}\r\n            sx={{\r\n              bgcolor: theme.palette.primary.main,\r\n              '&:hover': { bgcolor: theme.palette.primary.dark }\r\n            }}\r\n          >\r\n            {loading ? 'Loading...' : 'Load More'}\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MediaGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}