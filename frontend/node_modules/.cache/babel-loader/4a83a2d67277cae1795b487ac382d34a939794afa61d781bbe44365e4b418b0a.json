{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\n\n// ——————————————————————————————————————————————\n// Backend API service\n// ——————————————————————————————————————————————\nconst API = axios.create({\n  baseURL: 'http://localhost:5000',\n  withCredentials: true // Allows session-based auth cookies\n});\n\n// Authentication endpoints\nexport const registerUser = async userData => (await API.post('/auth/register', userData)).data;\nexport const loginUser = async userData => (await API.post('/auth/login', userData)).data;\nexport const logoutUser = async () => (await API.post('/auth/logout')).data;\nexport const sendResetLink = async payload => (await API.post('/auth/forgot-password', payload)).data;\nexport const resetPasswordConfirm = async payload => (await API.post('/auth/reset-password-confirm', payload)).data;\n\n// User profile\nexport const getUserProfile = async () => (await API.get('/user/profile')).data;\nexport const updateUserProfile = async profile => (await API.put('/user/profile', profile)).data;\n\n// Favorites\nexport const getFavorites = async () => (await API.get('/favorites')).data;\nexport const addFavorite = async media => (await API.post('/favorites', media)).data;\nexport const removeFavorite = async id => (await API.delete(`/favorites/${id}`)).data;\n\n// Search history\nexport const saveSearch = async (query, filters = {}) => (await API.post('/search/save', {\n  query,\n  filters\n})).data;\nexport const getSearchHistory = async () => (await API.get('/search/history')).data;\nexport const getRecentSearches = async () => (await API.get('/search/recent')).data;\nexport const deleteSearch = async id => (await API.delete(`/search/${id}`)).data;\n\n// Contact form\nexport const sendContactMessage = async payload => (await API.post('/contact', payload)).data;\n\n// ——————————————————————————————————————————————\n// Openverse API service\n// ——————————————————————————————————————————————\nconst OPENVERSE_API = axios.create({\n  baseURL: 'https://api.openverse.org/v1',\n  headers: {\n    'Accept': 'application/json'\n  }\n});\n\n// Search & details helpers unwrap `.data`\nexport const searchMedia = async (query, mediaType = 'images', page = 1, perPage = 20, filters = {}) => {\n  const params = {\n    q: query,\n    page,\n    page_size: perPage,\n    ...filters\n  };\n  const {\n    data\n  } = await OPENVERSE_API.get(`/${mediaType}/`, {\n    params\n  });\n  return data;\n};\nexport const getMediaDetails = async (mediaType, id) => {\n  const {\n    data\n  } = await OPENVERSE_API.get(`/${mediaType}/${id}/`);\n  return data;\n};\n\n// ——————————————————————————————————————————————\n// Global interceptor for 401s\n// ——————————————————————————————————————————————\nAPI.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    console.warn('Authentication error – please log in again.');\n    // e.g. redirect to /login or dispatch logout…\n  }\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","withCredentials","registerUser","userData","post","data","loginUser","logoutUser","sendResetLink","payload","resetPasswordConfirm","getUserProfile","get","updateUserProfile","profile","put","getFavorites","addFavorite","media","removeFavorite","id","delete","saveSearch","query","filters","getSearchHistory","getRecentSearches","deleteSearch","sendContactMessage","OPENVERSE_API","headers","searchMedia","mediaType","page","perPage","params","q","page_size","getMediaDetails","interceptors","response","use","error","_error$response","status","console","warn","Promise","reject"],"sources":["C:/users/pc/desktop/se project/mediafinder/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nimport axios from 'axios';\r\n\r\n// ——————————————————————————————————————————————\r\n// Backend API service\r\n// ——————————————————————————————————————————————\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:5000',\r\n  withCredentials: true,   // Allows session-based auth cookies\r\n});\r\n\r\n// Authentication endpoints\r\nexport const registerUser         = async userData => (await API.post('/auth/register', userData)).data;\r\nexport const loginUser            = async userData => (await API.post('/auth/login', userData)).data;\r\nexport const logoutUser           = async ()         => (await API.post('/auth/logout')).data;\r\nexport const sendResetLink        = async payload    => (await API.post('/auth/forgot-password', payload)).data;\r\nexport const resetPasswordConfirm = async payload    => (await API.post('/auth/reset-password-confirm', payload)).data;\r\n\r\n// User profile\r\nexport const getUserProfile       = async ()       => (await API.get('/user/profile')).data;\r\nexport const updateUserProfile    = async profile  => (await API.put('/user/profile', profile)).data;\r\n\r\n// Favorites\r\nexport const getFavorites         = async ()       => (await API.get('/favorites')).data;\r\nexport const addFavorite          = async media    => (await API.post('/favorites', media)).data;\r\nexport const removeFavorite       = async id       => (await API.delete(`/favorites/${id}`)).data;\r\n\r\n// Search history\r\nexport const saveSearch           = async (query, filters = {}) =>\r\n  (await API.post('/search/save', { query, filters })).data;\r\nexport const getSearchHistory     = async ()       => (await API.get('/search/history')).data;\r\nexport const getRecentSearches    = async ()       => (await API.get('/search/recent')).data;\r\nexport const deleteSearch         = async id       => (await API.delete(`/search/${id}`)).data;\r\n\r\n// Contact form\r\nexport const sendContactMessage   = async payload    => (await API.post('/contact', payload)).data;\r\n\r\n// ——————————————————————————————————————————————\r\n// Openverse API service\r\n// ——————————————————————————————————————————————\r\nconst OPENVERSE_API = axios.create({\r\n  baseURL: 'https://api.openverse.org/v1',\r\n  headers: { 'Accept': 'application/json' },\r\n});\r\n\r\n// Search & details helpers unwrap `.data`\r\nexport const searchMedia = async (\r\n  query,\r\n  mediaType = 'images',\r\n  page = 1,\r\n  perPage = 20,\r\n  filters = {}\r\n) => {\r\n  const params = { q: query, page, page_size: perPage, ...filters };\r\n  const { data } = await OPENVERSE_API.get(`/${mediaType}/`, { params });\r\n  return data;\r\n};\r\n\r\nexport const getMediaDetails = async (mediaType, id) => {\r\n  const { data } = await OPENVERSE_API.get(`/${mediaType}/${id}/`);\r\n  return data;\r\n};\r\n\r\n// ——————————————————————————————————————————————\r\n// Global interceptor for 401s\r\n// ——————————————————————————————————————————————\r\nAPI.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response?.status === 401) {\r\n      console.warn('Authentication error – please log in again.');\r\n      // e.g. redirect to /login or dispatch logout…\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default API;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}