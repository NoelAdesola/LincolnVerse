{"ast":null,"code":"// src/services/openverseApi.js\nconst API_URL = 'https://api.openverse.org/v1';\nexport const searchMedia = async (query, mediaType = 'image', page = 1) => {\n  try {\n    const response = await fetch(`${API_URL}/${mediaType}s/?q=${encodeURIComponent(query)}&page=${page}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`API error: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error searching Openverse:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","searchMedia","query","mediaType","page","response","fetch","encodeURIComponent","headers","ok","Error","status","json","error","console"],"sources":["C:/users/pc/desktop/SE Project/MediaFinder/frontend/src/services/openverseApi.js"],"sourcesContent":["// src/services/openverseApi.js\r\nconst API_URL = 'https://api.openverse.org/v1';\r\n\r\nexport const searchMedia = async (query, mediaType = 'image', page = 1) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/${mediaType}s/?q=${encodeURIComponent(query)}&page=${page}`,\r\n      {\r\n        headers: {\r\n          'Accept': 'application/json'\r\n        }\r\n      }\r\n    );\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`API error: ${response.status}`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error searching Openverse:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,8BAA8B;AAE9C,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,SAAS,GAAG,OAAO,EAAEC,IAAI,GAAG,CAAC,KAAK;EACzE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGN,OAAO,IAAIG,SAAS,QAAQI,kBAAkB,CAACL,KAAK,CAAC,SAASE,IAAI,EAAE,EACvE;MACEI,OAAO,EAAE;QACP,QAAQ,EAAE;MACZ;IACF,CACF,CAAC;IAED,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,cAAcL,QAAQ,CAACM,MAAM,EAAE,CAAC;IAClD;IAEA,OAAO,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}