{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\n\n// Backend API service\nconst API = axios.create({\n  baseURL: 'http://localhost:5000',\n  withCredentials: true // Allows session-based authentication\n});\n\n// Authentication endpoints\nexport const registerUser = userData => API.post('/auth/register', userData);\nexport const loginUser = userData => API.post('/auth/login', userData);\nexport const logoutUser = () => API.post('/auth/logout');\n\n// Password reset\nexport const sendResetLink = payload => API.post('/auth/password/forgot', payload);\nexport const resetPasswordConfirm = payload => API.post('/auth/password/reset', payload);\n\n// User profile endpoints\nexport const getUserProfile = () => API.get('/user/profile');\nexport const updateUserProfile = profileData => API.put('/user/profile', profileData);\n\n// Favorites endpoints\nexport const getFavorites = () => API.get('/favorites');\nexport const addFavorite = media => API.post('/favorites', media);\nexport const removeFavorite = id => API.delete(`/favorites/${id}`);\n\n// Search history endpoints\nexport const saveSearch = (query, filters = {}) => API.post('/search/save', {\n  query,\n  filters\n});\nexport const getRecentSearches = () => API.get('/search/recent');\nexport const getSearchHistory = () => API.get('/search/history');\nexport const deleteSearch = id => API.delete(`/search/${id}`);\n\n// Contact form endpoint\nexport const sendContactMessage = payload => API.post('/contact', payload);\n\n// Openverse API service (public media search)\nconst OPENVERSE_API = axios.create({\n  baseURL: 'https://api.openverse.org/v1',\n  headers: {\n    Accept: 'application/json'\n  }\n});\n\n// Openverse search & details\nexport const searchMedia = (query, mediaType = 'images', page = 1, perPage = 20, filters = {}) => {\n  const params = {\n    q: query,\n    page,\n    page_size: perPage,\n    ...filters\n  };\n  return OPENVERSE_API.get(`/${mediaType}/`, {\n    params\n  });\n};\nexport const getMediaDetails = (mediaType, id) => OPENVERSE_API.get(`/${mediaType}/${id}/`);\n\n// Global auth error handling\nAPI.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    console.log('Authentication error, please log in again.');\n    // You could dispatch a logout action or redirect to /login here\n  }\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","withCredentials","registerUser","userData","post","loginUser","logoutUser","sendResetLink","payload","resetPasswordConfirm","getUserProfile","get","updateUserProfile","profileData","put","getFavorites","addFavorite","media","removeFavorite","id","delete","saveSearch","query","filters","getRecentSearches","getSearchHistory","deleteSearch","sendContactMessage","OPENVERSE_API","headers","Accept","searchMedia","mediaType","page","perPage","params","q","page_size","getMediaDetails","interceptors","response","use","error","_error$response","status","console","log","Promise","reject"],"sources":["C:/Users/Student/Desktop/Scratch/LincolnVerse/LincolnVerse/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nimport axios from 'axios';\r\n\r\n// Backend API service\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:5000',\r\n  withCredentials: true, // Allows session-based authentication\r\n});\r\n\r\n// Authentication endpoints\r\nexport const registerUser = (userData) =>\r\n  API.post('/auth/register', userData);\r\nexport const loginUser = (userData) =>\r\n  API.post('/auth/login', userData);\r\nexport const logoutUser = () =>\r\n  API.post('/auth/logout');\r\n\r\n// Password reset\r\nexport const sendResetLink = (payload) =>\r\n  API.post('/auth/password/forgot', payload);\r\nexport const resetPasswordConfirm = (payload) =>\r\n  API.post('/auth/password/reset', payload);\r\n\r\n// User profile endpoints\r\nexport const getUserProfile = () =>\r\n  API.get('/user/profile');\r\nexport const updateUserProfile = (profileData) =>\r\n  API.put('/user/profile', profileData);\r\n\r\n// Favorites endpoints\r\nexport const getFavorites = () =>\r\n  API.get('/favorites');\r\nexport const addFavorite = (media) =>\r\n  API.post('/favorites', media);\r\nexport const removeFavorite = (id) =>\r\n  API.delete(`/favorites/${id}`);\r\n\r\n// Search history endpoints\r\nexport const saveSearch = (query, filters = {}) =>\r\n  API.post('/search/save', { query, filters });\r\nexport const getRecentSearches = () =>\r\n  API.get('/search/recent');\r\nexport const getSearchHistory = () =>\r\n  API.get('/search/history');\r\nexport const deleteSearch = (id) =>\r\n  API.delete(`/search/${id}`);\r\n\r\n// Contact form endpoint\r\nexport const sendContactMessage = (payload) =>\r\n  API.post('/contact', payload);\r\n\r\n// Openverse API service (public media search)\r\nconst OPENVERSE_API = axios.create({\r\n  baseURL: 'https://api.openverse.org/v1',\r\n  headers: { Accept: 'application/json' },\r\n});\r\n\r\n// Openverse search & details\r\nexport const searchMedia = (\r\n  query,\r\n  mediaType = 'images',\r\n  page = 1,\r\n  perPage = 20,\r\n  filters = {}\r\n) => {\r\n  const params = { q: query, page, page_size: perPage, ...filters };\r\n  return OPENVERSE_API.get(`/${mediaType}/`, { params });\r\n};\r\nexport const getMediaDetails = (mediaType, id) =>\r\n  OPENVERSE_API.get(`/${mediaType}/${id}/`);\r\n\r\n// Global auth error handling\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      console.log('Authentication error, please log in again.');\r\n      // You could dispatch a logout action or redirect to /login here\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default API;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}